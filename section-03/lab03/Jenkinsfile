/* -------- functions ---------- */
def notifySlack(STATUS, COLOR) {
	slackSend (channel: '#car_inspection', color: COLOR, message: STATUS+" : " +  "${env.JOB_NAME} [${env.BUILD_NUMBER}] (${env.BUILD_URL})")
}

pipeline {
  agent { label 'slave1' }

  environment {
      NEW_VERSION = "1.3.0"
      dockerRegistry="https://index.docker.io/v1/"
      tag="0.1.2"
      image="nexweb1/sample"
  }

  stages {
    stage("git-clone") {
      steps {
        script {
          notifySlack("Started:", "#FFFF00")
        }
        echo "Git clone from gitlab repository"
        git branch: 'dev', credentialsId: 'github-access-token', url: 'https://github.com/yoonjk/jenkins-handson.git'
      }
    }

    stage("build") {
      steps {
        echo "Building the application..."   
        sh "mvn clean package -Dmaven.testSkips=true "
      }
    }

    stage("inspect code") {
      steps {
        echo "inspecting the application..."
      }
    }

    stage("build and push image") {
      steps {
        echo "Building and push the image..."
        withCredentials ([
          usernamePassword(
            credentialsId: 'docker-credentials',
            usernameVariable: 'DOCKER_HUB_USER', 
            passwordVariable: 'DOCKER_HUB_PASSWORD'
          )
        ]) {
		echo "some credentials info : ${DOCKER_HUB_USER}, ${DOCKER_HUB_PASSWORD}"

		sh "docker login  --username ${DOCKER_HUB_USER} --password ${DOCKER_HUB_PASSWORD} ${dockerRegistry}"
		sh "docker build -f ./deployment/Dockerfile -t ${image}:${tag} ."
		sh "docker tag ${image}:${tag} ${image}:hello"
		sh "docker push ${image}:hello"    
        }
      }
    }

    stage("deploy") {
      steps {
        echo "Deploying the application..."
      }
    }
  }
  post {
    success {
      script {
        notifySlack("SUCCESSFUL: Job", "#00FF00")
      }
    }

    failure {
      script {
        notifySlack("Failed", "#FF0000")
      }
    }
  }
}
